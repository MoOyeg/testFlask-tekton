apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  creationTimestamp: null
  name: policytektonscanning
spec:
  crd:
    spec:
      names:
        kind: PolicyTektonScanning
  targets:
  - rego: |-
      package main

      default is_gatekeeper = false

      is_gatekeeper {
        has_field(input, "review")
        has_field(input.review, "object")
      }

      resource = input.review.object {
        is_gatekeeper
      }

      resource = input {
        not is_gatekeeper
      }

      resource_name = resource.metadata.name

      resource_kind = resource.kind

      no_any_stackrox_scan_task_negation {
        not any_stackrox_scan_task
      }

      any_stackrox_scan_task {
        some i
        resource.spec.tasks[i].taskRef.kind == "Task"
        name := resource.spec.tasks[i].taskRef.name
        name == "rox-image-scan"
      }

      violation[{"msg": msg}] {
        resource_kind == "Pipeline"

        no_any_stackrox_scan_task_negation

        msg := sprintf("Denied -- Pipeline %v does not have the ACS Task for image Scanning(rox-image-scan), This is required by Policy", [resource_name])
      }

      has_field(obj, field) {
        not object.get(obj, field, "N_DEFINED") == "N_DEFINED"
      }

      missing_field(obj, field) {
        obj[field] == ""
      }

      missing_field(obj, field) {
        not has_field(obj, field)
      }
    target: admission.k8s.gatekeeper.sh
status: {}
